buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	
	dependencies {
		classpath 'org.akhikhl.gretty:gretty:+'
	}
}

apply plugin: 'maven-publish'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

archivesBaseName='muk'
ext.fullRepoUrl = "$config.binaryRepository.url/$config.binaryRepository.name"

repositories {
	maven { url fullRepoUrl }
}

sourceSets {
    integrationTest {
        java {
        	compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        	srcDir file('src/integrationtest/java')
        }
        resources.srcDir file('src/integrationtest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
	remoteArchive.extendsFrom runtime
}

dependencies {
	compile 'javax.validation:validation-api:2.0.0.Alpha2'
	compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
	compile 'org.springframework.security:spring-security-web:4.2.2.RELEASE'
	compile 'org.springframework.security:spring-security-config:4.2.2.RELEASE'
	compile 'org.apache.felix:org.apache.felix.framework:5.6.2'
	compile 'org.apache.camel:camel-spring-osgi:2.3.0'
	compile group: 'org.apache.camel', name: 'camel-spring-javaconfig', version: camelVersion
	compile group: 'org.apache.camel', name: 'camel-spring-security', version: camelVersion
	compile group: 'org.apache.camel', name: 'camel-test-spring', version: camelVersion
	compile group: 'org.apache.camel', name: 'camel-jetty', version: camelVersion
	compile 'org.apache.activemq:activemq-kahadb-store:5.14.4'
	compile 'org.slf4j:slf4j-api:1.7.25'
	compile 'org.slf4j:slf4j-log4j12:1.7.25'
	compile 'log4j:log4j:1.2.17'
	
	compile group: 'org.restlet.jee', name: 'org.restlet.ext.spring', version: restletVersion
	compile 'org.thymeleaf:thymeleaf:2.1.4.RELEASE'
	compile 'org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE'
	compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
	compile 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:1.3.0'
	
	testCompile 'commons-io:commons-io:2.5'
	providedRuntime 'javax.servlet:javax.servlet-api:4.0.0-b05'

	remoteArchive "$project.group:$project.archivesBaseName:$project.version"
}	

publishing {
	publications {
		webApp(MavenPublication) {
			artifactId "$project.archivesBaseName"
			from components.web
		}
	}

	repositories {
		maven {
			url fullRepoUrl

			credentials {
				username = config.binaryRepository.username
				password = config.binaryRepository.password
			}
		}
	}
}

gretty {
	httpPort = 8082
	servletContainer = 'jetty9'
	httpEnabled = true
	managedClassReload=true
	fastReload=true
	contextPath='/sstack'
	jvmArgs=['-Dcustom.logging.root=/tmp', '-Dcustom.application.keystore=' + config.keystorefile, '-Dcustom.application.keystorepass=' + config.keystorepass]
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

task createBuildInfoFile
createBuildInfoFile.doLast {
	def buildInfoFile = new File("$buildDir/build-info.properties")
	Properties props = new Properties()
	props.setProperty('version', project.version.toString())
	props.setProperty('timestamp', project.buildTimestamp)
	props.store(buildInfoFile.newWriter(), null)
}


war {
	dependsOn createBuildInfoFile

	from(buildDir) {
		include 'build-info.properties'
		into('WEB-INF/classes')
	}
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

